name: Nix CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  check:
    name: "Check on ${{ matrix.system }}"
    runs-on: ${{ matrix.system == 'x86_64-linux' && 'ubuntu-latest' ||
      matrix.system == 'x86_64-darwin' && 'macos-latest' }}
    strategy:
      matrix:
        system: [x86_64-linux, x86_64-darwin]

    steps:
      # Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install Nix with flakes support
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4
        with:
          extra-conf: |
            experimental-features = nix-command flakes
            substituters = https://cache.nixos.org https://nix-community.cachix.org
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=

      # Step 3: Set up Nix cache (speeds up builds dramatically)
      - name: Setup Nix Cache
        uses: actions/cache@v3
        with:
          path: |
            /nix/store
            ~/.cache/nix
          key: ${{ runner.os }}-nix-${{ hashFiles('flake.lock') }}
          restore-keys: |
            ${{ runner.os }}-nix-

      # Step 4: Run checks
      - name: Flake Check
        run: nix flake check

      # Step 5: Build packages
      - name: Build "florestad"
        run: |
          echo "Building for ${{ matrix.system }}..."
          nix build .#florestad --print-out-paths

      - name: Build "floresta-cli"
        run: |
          echo "Building for ${{ matrix.system }}..."
          nix build .#floresta-cli --print-out-paths

      - name: Build "libfloresta"
        run: |
          echo "Building for ${{ matrix.system }}..."
          nix build .#libfloresta --print-out-paths

      - name: Build "default"
        run: |
          echo "Building for ${{ matrix.system }}..."
          nix build --print-out-paths
